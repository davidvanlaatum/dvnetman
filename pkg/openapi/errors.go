// Code generated by dvnetman. DO NOT EDIT.

package openapi

import (
	"fmt"
	"net/http"
)

type ErrorHandler interface {
	ErrorHandler(w http.ResponseWriter, r *http.Request, err error)
	WriteErrorHandler(w http.ResponseWriter, r *http.Request, err error)
}
type PathParamError struct {
	name string
	err  error
}

func (e PathParamError) Error() string {
	return fmt.Sprintf("invalid path param %s: %v", e.name, e.err)
}
func NewPathParamError(name string, err error) error {
	return &PathParamError{
		err:  err,
		name: name,
	}
}

type QueryParamError struct {
	name string
	err  error
}

func (e QueryParamError) Error() string {
	return fmt.Sprintf("invalid Query param %s: %v", e.name, e.err)
}
func NewQueryParamError(name string, err error) error {
	return &QueryParamError{
		err:  err,
		name: name,
	}
}

type BodyParamError struct {
	err error
}

func (e BodyParamError) Error() string {
	return fmt.Sprintf("invalid body param: %v", e.err)
}
func NewBodyParamError(err error) error {
	return &BodyParamError{err: err}
}
