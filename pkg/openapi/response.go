// Code generated by dvnetman. DO NOT EDIT.

package openapi

import (
	"encoding/json"
	errors "github.com/pkg/errors"
	"net/http"
	"strconv"
)

type Response struct {
	Code    int
	Headers http.Header
	Object  interface{}
}

func (res *Response) Write(r *http.Request, w http.ResponseWriter) (err error) {
	var data []byte
	if res.Object != nil {
		w.Header().Set("Content-Type", "application/json")
		if data, err = json.MarshalIndent(res.Object, "", "  "); err != nil {
			return errors.Wrap(err, "failed to marshal response data")
		}
		w.Header().Set("Content-Length", strconv.FormatUint(uint64(len(data)), 10))
	}
	if res.Code == 0 {
		return errors.New("response code not set")
	}
	for k, v := range res.Headers {
		for _, value := range v {
			w.Header().Add(k, value)
		}
	}
	w.WriteHeader(res.Code)
	if data != nil {
		_, err = w.Write(data)
	}
	return
}
