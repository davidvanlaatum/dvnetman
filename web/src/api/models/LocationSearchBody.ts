// noinspection all
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * DVNetMan
 * DVNetMan
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LocationSearchBody
 */
export interface LocationSearchBody {
    /**
     * 
     * @type {Array<string>}
     * @memberof LocationSearchBody
     */
    fields?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof LocationSearchBody
     */
    ids?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof LocationSearchBody
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationSearchBody
     */
    nameRegex?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationSearchBody
     */
    parent?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationSearchBody
     */
    site?: string;
}

/**
 * Check if a given object implements the LocationSearchBody interface.
 */
export function instanceOfLocationSearchBody(value: object): value is LocationSearchBody {
    return true;
}

export function LocationSearchBodyFromJSON(json: any): LocationSearchBody {
    return LocationSearchBodyFromJSONTyped(json, false);
}

export function LocationSearchBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationSearchBody {
    if (json == null) {
        return json;
    }
    return {
        
        'fields': json['fields'] == null ? undefined : json['fields'],
        'ids': json['ids'] == null ? undefined : json['ids'],
        'name': json['name'] == null ? undefined : json['name'],
        'nameRegex': json['nameRegex'] == null ? undefined : json['nameRegex'],
        'parent': json['parent'] == null ? undefined : json['parent'],
        'site': json['site'] == null ? undefined : json['site'],
    };
}

export function LocationSearchBodyToJSON(json: any): LocationSearchBody {
    return LocationSearchBodyToJSONTyped(json, false);
}

export function LocationSearchBodyToJSONTyped(value?: LocationSearchBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fields': value['fields'],
        'ids': value['ids'],
        'name': value['name'],
        'nameRegex': value['nameRegex'],
        'parent': value['parent'],
        'site': value['site'],
    };
}

