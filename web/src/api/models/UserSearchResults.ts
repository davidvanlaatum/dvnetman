// noinspection all
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * DVNetMan
 * DVNetMan
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserResult } from './UserResult';
import {
    UserResultFromJSON,
    UserResultFromJSONTyped,
    UserResultToJSON,
    UserResultToJSONTyped,
} from './UserResult';

/**
 * 
 * @export
 * @interface UserSearchResults
 */
export interface UserSearchResults {
    /**
     * 
     * @type {number}
     * @memberof UserSearchResults
     */
    count: number;
    /**
     * 
     * @type {Array<UserResult>}
     * @memberof UserSearchResults
     */
    items: Array<UserResult>;
    /**
     * 
     * @type {boolean}
     * @memberof UserSearchResults
     */
    next: boolean;
}

/**
 * Check if a given object implements the UserSearchResults interface.
 */
export function instanceOfUserSearchResults(value: object): value is UserSearchResults {
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('next' in value) || value['next'] === undefined) return false;
    return true;
}

export function UserSearchResultsFromJSON(json: any): UserSearchResults {
    return UserSearchResultsFromJSONTyped(json, false);
}

export function UserSearchResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSearchResults {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'items': ((json['items'] as Array<any>).map(UserResultFromJSON)),
        'next': json['next'],
    };
}

export function UserSearchResultsToJSON(json: any): UserSearchResults {
    return UserSearchResultsToJSONTyped(json, false);
}

export function UserSearchResultsToJSONTyped(value?: UserSearchResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'items': ((value['items'] as Array<any>).map(UserResultToJSON)),
        'next': value['next'],
    };
}

