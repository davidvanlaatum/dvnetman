// noinspection all
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * DVNetMan
 * DVNetMan
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Stats
 */
export interface Stats {
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    deviceCount: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    deviceTypeCount: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    locationCount: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    manufacturerCount: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    siteCount: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    userCount: number;
}

/**
 * Check if a given object implements the Stats interface.
 */
export function instanceOfStats(value: object): value is Stats {
    if (!('deviceCount' in value) || value['deviceCount'] === undefined) return false;
    if (!('deviceTypeCount' in value) || value['deviceTypeCount'] === undefined) return false;
    if (!('locationCount' in value) || value['locationCount'] === undefined) return false;
    if (!('manufacturerCount' in value) || value['manufacturerCount'] === undefined) return false;
    if (!('siteCount' in value) || value['siteCount'] === undefined) return false;
    if (!('userCount' in value) || value['userCount'] === undefined) return false;
    return true;
}

export function StatsFromJSON(json: any): Stats {
    return StatsFromJSONTyped(json, false);
}

export function StatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Stats {
    if (json == null) {
        return json;
    }
    return {
        
        'deviceCount': json['deviceCount'],
        'deviceTypeCount': json['deviceTypeCount'],
        'locationCount': json['locationCount'],
        'manufacturerCount': json['manufacturerCount'],
        'siteCount': json['siteCount'],
        'userCount': json['userCount'],
    };
}

export function StatsToJSON(json: any): Stats {
    return StatsToJSONTyped(json, false);
}

export function StatsToJSONTyped(value?: Stats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'deviceCount': value['deviceCount'],
        'deviceTypeCount': value['deviceTypeCount'],
        'locationCount': value['locationCount'],
        'manufacturerCount': value['manufacturerCount'],
        'siteCount': value['siteCount'],
        'userCount': value['userCount'],
    };
}

