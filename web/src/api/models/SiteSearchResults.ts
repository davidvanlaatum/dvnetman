// noinspection all
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * DVNetMan
 * DVNetMan
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SiteResult } from './SiteResult';
import {
    SiteResultFromJSON,
    SiteResultFromJSONTyped,
    SiteResultToJSON,
    SiteResultToJSONTyped,
} from './SiteResult';

/**
 * 
 * @export
 * @interface SiteSearchResults
 */
export interface SiteSearchResults {
    /**
     * 
     * @type {number}
     * @memberof SiteSearchResults
     */
    count: number;
    /**
     * 
     * @type {Array<SiteResult>}
     * @memberof SiteSearchResults
     */
    items: Array<SiteResult>;
    /**
     * 
     * @type {boolean}
     * @memberof SiteSearchResults
     */
    next: boolean;
}

/**
 * Check if a given object implements the SiteSearchResults interface.
 */
export function instanceOfSiteSearchResults(value: object): value is SiteSearchResults {
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('next' in value) || value['next'] === undefined) return false;
    return true;
}

export function SiteSearchResultsFromJSON(json: any): SiteSearchResults {
    return SiteSearchResultsFromJSONTyped(json, false);
}

export function SiteSearchResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteSearchResults {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'items': ((json['items'] as Array<any>).map(SiteResultFromJSON)),
        'next': json['next'],
    };
}

export function SiteSearchResultsToJSON(json: any): SiteSearchResults {
    return SiteSearchResultsToJSONTyped(json, false);
}

export function SiteSearchResultsToJSONTyped(value?: SiteSearchResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'items': ((value['items'] as Array<any>).map(SiteResultToJSON)),
        'next': value['next'],
    };
}

