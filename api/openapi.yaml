openapi: 3.1.0
info:
  title: DVNetMan
  description: DVNetMan
  version: 1.0.0
servers:
  - url: /
paths:
  /api/v1/device:
    post:
      operationId: createDevice
      responses:
        "200":
          description: Create device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      tags:
        - Device
      security:
        - bearerAuth: []
  /api/v1/device/search:
    post:
      operationId: listDevices
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
        - name: sort
          in: query
          description: Sort order
          schema:
            type: string
      responses:
        "200":
          description: List of device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSearchResults'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSearchBody'
      tags:
        - Device
      security:
        - bearerAuth: []
  /api/v1/device/{id}:
    delete:
      operationId: deleteDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Delete device
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      tags:
        - Device
      security:
        - bearerAuth: []
    get:
      operationId: getDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: If-None-Match
          in: header
          schema:
            type: string
        - name: If-Modified-Since
          in: header
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Get device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: not_found
                    message: Not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      tags:
        - Device
      security:
        - bearerAuth: []
    put:
      operationId: updateDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Update device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      tags:
        - Device
      security:
        - bearerAuth: []
  /api/v1/deviceType:
    post:
      operationId: createDeviceType
      responses:
        "200":
          description: Create deviceType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceType'
        required: true
      tags:
        - Device
      security:
        - bearerAuth: []
  /api/v1/deviceType/search:
    post:
      operationId: listDeviceTypes
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
        - name: sort
          in: query
          description: Sort order
          schema:
            type: string
      responses:
        "200":
          description: List of deviceType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTypeSearchResults'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypeSearchBody'
      tags:
        - Device
      security:
        - bearerAuth: []
  /api/v1/deviceType/{id}:
    delete:
      operationId: deleteDeviceType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Delete deviceType
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      tags:
        - Device
      security:
        - bearerAuth: []
    get:
      operationId: getDeviceType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: If-None-Match
          in: header
          schema:
            type: string
        - name: If-Modified-Since
          in: header
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Get deviceType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: not_found
                    message: Not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      tags:
        - Device
      security:
        - bearerAuth: []
    put:
      operationId: updateDeviceType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Update deviceType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceType'
        required: true
      tags:
        - Device
      security:
        - bearerAuth: []
  /api/v1/manufacturer:
    post:
      operationId: createManufacturer
      responses:
        "200":
          description: Create manufacturer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
        required: true
      tags:
        - Manufacturer
      security:
        - bearerAuth: []
  /api/v1/manufacturer/search:
    post:
      operationId: listManufacturers
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
        - name: sort
          in: query
          description: Sort order
          schema:
            type: string
      responses:
        "200":
          description: List of manufacturer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerSearchResults'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerSearchBody'
      tags:
        - Manufacturer
      security:
        - bearerAuth: []
  /api/v1/manufacturer/{id}:
    delete:
      operationId: deleteManufacturer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Delete manufacturer
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      tags:
        - Manufacturer
      security:
        - bearerAuth: []
    get:
      operationId: getManufacturer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: If-None-Match
          in: header
          schema:
            type: string
        - name: If-Modified-Since
          in: header
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Get manufacturer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: not_found
                    message: Not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      tags:
        - Manufacturer
      security:
        - bearerAuth: []
    put:
      operationId: updateManufacturer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Update manufacturer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
        required: true
      tags:
        - Manufacturer
      security:
        - bearerAuth: []
  /api/v1/stats:
    get:
      operationId: GetStats
      responses:
        "200":
          description: Stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stats'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      tags:
        - Stats
      security:
        - bearerAuth: []
  /api/v1/user:
    post:
      operationId: createUser
      responses:
        "200":
          description: Create user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      tags:
        - User
      security:
        - bearerAuth: []
  /api/v1/user/current:
    get:
      operationId: GetCurrentUser
      responses:
        "200":
          description: Get current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      tags:
        - User
      security:
        - bearerAuth: []
  /api/v1/user/search:
    post:
      operationId: listUsers
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
        - name: sort
          in: query
          description: Sort order
          schema:
            type: string
      responses:
        "200":
          description: List of user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResults'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSearchBody'
      tags:
        - User
      security:
        - bearerAuth: []
  /api/v1/user/{id}:
    delete:
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Delete user
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      tags:
        - User
      security:
        - bearerAuth: []
    get:
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: If-None-Match
          in: header
          schema:
            type: string
        - name: If-Modified-Since
          in: header
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Get user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: not_found
                    message: Not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      tags:
        - User
      security:
        - bearerAuth: []
    put:
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Update user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: bad_request
                    message: Bad request
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/APIErrorModal'
              example:
                errors:
                  - code: internal_server_error
                    message: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      tags:
        - User
      security:
        - bearerAuth: []
components:
  schemas:
    APIErrorModal:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    Device:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        deviceType:
          $ref: '#/components/schemas/ObjectReference'
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          $ref: '#/components/schemas/ObjectReference'
        name:
          type: string
        ports:
          type: array
          items:
            $ref: '#/components/schemas/DevicePort'
        rack:
          $ref: '#/components/schemas/ObjectReference'
        rackFace:
          type: string
          enum:
            - front
            - rear
        rackPosition:
          type: number
        site:
          $ref: '#/components/schemas/ObjectReference'
        status:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        updated:
          type: string
          format: date-time
          readOnly: true
        version:
          type: integer
      required:
        - id
        - version
    DevicePort:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
    DeviceResult:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        deviceType:
          $ref: '#/components/schemas/ObjectReference'
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          $ref: '#/components/schemas/ObjectReference'
        name:
          type: string
        rack:
          $ref: '#/components/schemas/ObjectReference'
        site:
          $ref: '#/components/schemas/ObjectReference'
        status:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        updated:
          type: string
          format: date-time
          readOnly: true
        version:
          type: integer
      required:
        - id
        - id
        - version
    DeviceSearchBody:
      type: object
      properties:
        deviceType:
          type: array
          items:
            type: string
            format: uuid
        fields:
          type: array
          items:
            type: string
        ids:
          type: array
          items:
            type: string
            format: uuid
        name:
          type: string
        nameRegex:
          type: string
        status:
          type: string
    DeviceSearchResults:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResult'
        next:
          type: boolean
      required:
        - items
        - count
        - next
    DeviceType:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        manufacturer:
          $ref: '#/components/schemas/ObjectReference'
        model:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        updated:
          type: string
          format: date-time
          readOnly: true
        version:
          type: integer
      required:
        - id
        - version
    DeviceTypeResult:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        manufacturer:
          $ref: '#/components/schemas/ObjectReference'
        model:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        updated:
          type: string
          format: date-time
          readOnly: true
        version:
          type: integer
      required:
        - id
        - version
    DeviceTypeSearchBody:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        ids:
          type: array
          items:
            type: string
            format: uuid
        manufacturer:
          type: array
          items:
            type: string
            format: uuid
        model:
          type: string
        modelRegex:
          type: string
    DeviceTypeSearchResults:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeviceTypeResult'
        next:
          type: boolean
      required:
        - items
        - count
        - next
    ErrorMessage:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Manufacturer:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        updated:
          type: string
          format: date-time
          readOnly: true
        version:
          type: integer
      required:
        - id
        - name
        - id
        - version
    ManufacturerResult:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        updated:
          type: string
          format: date-time
          readOnly: true
        version:
          type: integer
      required:
        - id
        - name
        - id
        - version
    ManufacturerSearchBody:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        ids:
          type: array
          items:
            type: string
            format: uuid
        name:
          type: string
        nameRegex:
          type: string
    ManufacturerSearchResults:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/ManufacturerResult'
        next:
          type: boolean
      required:
        - items
        - count
        - next
    ObjectReference:
      type: object
      properties:
        displayName:
          type: string
          readOnly: true
        id:
          type: string
          format: uuid
      required:
        - id
    Stats:
      type: object
      properties:
        deviceCount:
          type: integer
        deviceTypeCount:
          type: integer
        manufacturerCount:
          type: integer
        userCount:
          type: integer
    Tag:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          readOnly: true
    User:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
        externalID:
          type: string
        externalProvider:
          type: string
        firstName:
          type: string
        id:
          type: string
          format: uuid
          readOnly: true
        lastName:
          type: string
        password:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        updated:
          type: string
          format: date-time
          readOnly: true
        username:
          type: string
        version:
          type: integer
      required:
        - id
        - version
    UserResult:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        id:
          type: string
          format: uuid
        lastName:
          type: string
        username:
          type: string
      required:
        - id
    UserSearchBody:
      type: object
      properties:
        email:
          type: string
          format: email
        fields:
          type: array
          items:
            type: string
        firstName:
          type: string
        firstNameRegex:
          type: string
        fullName:
          type: string
        fullNameRegex:
          type: string
        ids:
          type: array
          items:
            type: string
            format: uuid
        lastName:
          type: string
        lastNameRegex:
          type: string
        username:
          type: string
        usernameRegex:
          type: string
    UserSearchResults:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserResult'
        next:
          type: boolean
      required:
        - items
        - count
        - next
